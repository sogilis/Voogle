name: CI-unit-tests

on: [push]

jobs:
  CI-api-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: API lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          working-directory: services/api/
      - name: Install golang 1.17.0
        uses: actions/setup-go@v2
        with:
          go-version: "^1.17.0"
      - name: API build
        run: make build
        working-directory: services/api/
      - name: API unit tests
        run: make test
        working-directory: services/api/
  CI-webapp-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm install
        working-directory: services/webapp/
      - run: npm run build
        working-directory: services/webapp/
  CI-dockerfile-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make lint-dockerfile

  CD-Tag:
    runs-on: ubuntu-20.04
    needs: [CI-api-tests, CI-webapp-tests, CI-dockerfile-tests]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Auto increment tag
        id: tag
        uses: sophiware/actions-auto-increment-tag@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  CD-Publish:
    strategy:
      fail-fast: true
      matrix:
        services: [api, webapp]
    runs-on: ubuntu-20.04
    needs: [CD-Tag]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: "Get latest tag"
        id: latestTag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push ${{ matrix.services }} Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./services/${{ matrix.services }}
          push: true
          tags: ghcr.io/sogilis/voogle-${{ matrix.services }}:latest,ghcr.io/sogilis/voogle-${{ matrix.services }}:${{ steps.latestTag.outputs.tag }}
