name: CI-unit-tests

on: [push]

jobs:
  CI-api-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: golangci/golangci-lint-action@v2
        name: API lint
        with:
          version: v1.29
          working-directory: services/api/
      - uses: actions/setup-go@v2
        name: Install golang 1.17.0
        with:
          go-version: "^1.17.0"
      - run: make test
        name: API unit tests
        working-directory: services/api/
  CI-webapp-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm install
        working-directory: services/webapp
      - run: npm run build
        working-directory: services/webapp
  CI-dockerfile-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make lint-dockerfile

  CD-increment-on-success:
    runs-on: ubuntu-20.04
    needs: [CI-api-tests, CI-webapp-tests, CI-dockerfile-tests]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - run: echo 'The triggering workflow passed'
      - name: Auto increment tag
        id: tag
        uses: sophiware/actions-auto-increment-tag@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  CD-publish:
    runs-on: ubuntu-20.04
    needs: [CD-increment-on-success]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Build Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository_owner }}/Voogle
          tags: |
            type=semver,pattern={{version}}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./services/api
          push: true # Will only build if this is not here
          tags: ${{ steps.meta.outputs.tags }}
